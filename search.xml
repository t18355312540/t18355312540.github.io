<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据变换</title>
      <link href="/2022/07/23/%E6%95%B0%E6%8D%AE%E5%8F%98%E6%8D%A2/"/>
      <url>/2022/07/23/%E6%95%B0%E6%8D%AE%E5%8F%98%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试。" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="53a4a3f013e5b95bc2bb0e1ed260da9642738fc699b3f3556448355141d5dc64"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请您输入密码解密，来查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
          <category> 数据变换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
            <tag> 数据变换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学建模学习日记7.20-重复值和其他值处理</title>
      <link href="/2022/07/20/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B07-20-%E9%87%8D%E5%A4%8D%E5%80%BC%E5%A4%84%E7%90%86/"/>
      <url>/2022/07/20/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B07-20-%E9%87%8D%E5%A4%8D%E5%80%BC%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h5 id="重复值"><a href="#重复值" class="headerlink" title="重复值"></a>重复值</h5><p>数学建模中题目提供的数据常常会有重复的数值，通常采用下列原则记录重复值：</p><ul><li>数据清洗的第一步一般先处理重复值和缺失值</li><li>对于重复值一般采取删除法来处理</li><li>但有些重复值不能删除，例如订单明细数据或交易明细数据等</li></ul><p>常常调用python中pandas库里的函数处理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df=pd.read_csv(<span class="string">&#x27;测试数据.csv&#x27;</span>,encoding=<span class="string">&#x27;ANSI&#x27;</span>)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="http://picforblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE.png" alt="输出"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#去除重复值</span></span><br><span class="line">df.drop_duplicates()</span><br></pre></td></tr></table></figure><p><img src="http://picforblog.oss-cn-hangzhou.aliyuncs.com/img/%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E5%80%BC.png" alt="去除重复值"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#根据指定条件去除重复值</span></span><br><span class="line">df.drop_duplicates(subset=[<span class="string">&#x27;产品&#x27;</span>])</span><br></pre></td></tr></table></figure><p><img src="http://picforblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%A0%B9%E6%8D%AE%E6%8C%87%E5%AE%9A%E6%9D%A1%E4%BB%B6%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E5%80%BC.png" alt="根据指定条件去除重复值"></p><h5 id="无关值"><a href="#无关值" class="headerlink" title="无关值"></a>无关值</h5><p><strong>无关值</strong>：对于像id这种无关的属性直接删掉即可，样本集中可能还有其它的无关属性，需要根据情况具体分析。</p><h5 id="噪音"><a href="#噪音" class="headerlink" title="噪音"></a>噪音</h5><p><strong>数据噪音</strong>指的是数据中的干扰数据，即测量变量中的<strong>随机误差或方差</strong>。</p><p>数据噪声与离群点有较多相似之处，没有太过明确的定义区分，主要看应用的场景。观测量(Measurement) &#x3D; 真实数据(True Data) + 噪声 (Noise)：而离群点(Outlier)属于观测量，既有可能是真实数据产生的，也有可能是噪声带来的，但是总的来说是和大部分观测量之间有明显不同的观测值。</p><p>处理方法有一下几种：</p><h6 id="人工检查法"><a href="#人工检查法" class="headerlink" title="人工检查法"></a>人工检查法</h6><p>人为对数据进行筛选。</p><h6 id="统计模型法"><a href="#统计模型法" class="headerlink" title="统计模型法"></a>统计模型法</h6><p>与异常值处理相似，</p><p>对于正态数据，利用3σ 原则或使用四分位差进行去噪。</p><p>3σ的python代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">num=np.random.normal(loc=<span class="number">1</span>, scale=<span class="number">5</span>, size=<span class="number">100</span>)</span><br><span class="line">num=num.tolist()</span><br><span class="line">num.append(<span class="number">915</span>)</span><br><span class="line">num.append(-<span class="number">345</span>)</span><br><span class="line">num.append(<span class="number">441</span>)</span><br><span class="line">num=np.array(num)</span><br><span class="line">left=num.mean()-<span class="number">3</span>*num.std()</span><br><span class="line">right=num.mean()+<span class="number">3</span>*num.std()</span><br><span class="line"><span class="comment">#获取在范围内的数据</span></span><br><span class="line">new_num=num[(left&lt;num)&amp;(num&lt;right)]</span><br></pre></td></tr></table></figure><p>四分差python代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">detect_outliers2</span>(<span class="params">df</span>):</span><br><span class="line">    outlier_indices = []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1st quartile (25%)</span></span><br><span class="line">    Q1 = np.percentile(df, <span class="number">25</span>)</span><br><span class="line">    <span class="comment"># 3rd quartile (75%)</span></span><br><span class="line">    Q3 = np.percentile(df, <span class="number">75</span>)</span><br><span class="line">    <span class="comment"># Interquartile range (IQR)</span></span><br><span class="line">    IQR = Q3 - Q1</span><br><span class="line"></span><br><span class="line">    <span class="comment"># outlier step</span></span><br><span class="line">    outlier_step = <span class="number">1.5</span> * IQR</span><br><span class="line">    <span class="keyword">for</span> nu <span class="keyword">in</span> df:</span><br><span class="line">        <span class="keyword">if</span> (nu &lt; Q1 - outlier_step) | (nu &gt; Q3 + outlier_step):</span><br><span class="line">            df.remove(nu)</span><br><span class="line">    <span class="keyword">return</span> df</span><br></pre></td></tr></table></figure><p>对于偏态数据使用分箱去噪。</p><p>分箱法可以<strong>增强鲁棒性与避免过拟合</strong>。</p><ol><li>无监督分箱<br>  ①等距分箱<br>  ②等频分箱</li></ol>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="comment"># 导入一列数据</span></span><br><span class="line">df = pd.DataFrame(&#123;<span class="string">&#x27;年龄&#x27;</span>: [<span class="number">29</span>,<span class="number">7</span>,<span class="number">49</span>,<span class="number">12</span>,<span class="number">50</span>,<span class="number">34</span>,<span class="number">36</span>,<span class="number">75</span>,<span class="number">61</span>,<span class="number">20</span>,<span class="number">3</span>,<span class="number">11</span>]&#125;)</span><br><span class="line">df[<span class="string">&#x27;等距分箱&#x27;</span>] = pd.cut(df[<span class="string">&#x27;年龄&#x27;</span>] ,<span class="number">4</span>)    <span class="comment"># 实现等距分箱，分为4个箱</span></span><br><span class="line">df[<span class="string">&#x27;等频分箱&#x27;</span>] = pd.qcut(df[<span class="string">&#x27;年龄&#x27;</span>],<span class="number">4</span>)    <span class="comment"># 实现等频分箱，分为4个箱</span></span><br><span class="line">df</span><br></pre></td></tr></table></figure><p>  结果如下：</p><p>  <img src="http://picforblog.oss-cn-hangzhou.aliyuncs.com/img/%E6%97%A0%E7%9B%91%E7%9D%A3%E5%88%86%E7%AE%B1.png" alt="无监督分箱"></p><ol start="2"><li>有监督分箱<br>  有监督分箱会应用卡方检验与决策树算法来确定边界。实际分箱的效果一般会更好，也更加合理。有监督分箱对分箱边界的切分是需要Y的值才能进行的。</li></ol><p>  ①决策树分箱：利用分箱的特征与Y值进行决策树的拟合，决策树训练后的结果会提供内部节点的阈值，这个阈值成为分箱的边界。</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> scorecardpy <span class="keyword">as</span> sc</span><br><span class="line"><span class="comment"># 导入两列数据</span></span><br><span class="line">df = pd.DataFrame(</span><br><span class="line">&#123;<span class="string">&#x27;年龄&#x27;</span>: [<span class="number">29</span>,<span class="number">7</span>,<span class="number">49</span>,<span class="number">12</span>,<span class="number">50</span>,<span class="number">34</span>,<span class="number">36</span>,<span class="number">75</span>,<span class="number">61</span>,<span class="number">20</span>,<span class="number">3</span>,<span class="number">11</span>],</span><br><span class="line"><span class="string">&#x27;Y&#x27;</span>: [<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]&#125;)</span><br><span class="line">bins = sc.woebin(df, y=<span class="string">&#x27;Y&#x27;</span>, method=<span class="string">&#x27;tree&#x27;</span>)  <span class="comment"># 决策树分箱</span></span><br><span class="line">sc.woebin_plot(bins)</span><br></pre></td></tr></table></figure><p>  ②卡方分箱:卡方分箱通过<strong>对两个相邻的区间进行卡方检验，检测它们是否存在分布上的差异</strong>。通过卡方分箱得到的箱数是通过预先设定的阈值决定，算法会将具有最小卡方值的区间与相邻的最小卡方区间进行合并，合并到分箱个数达到阈值为止。</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> scorecardpy <span class="keyword">as</span> sc</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 导入两列数据</span></span><br><span class="line">df = pd.DataFrame(</span><br><span class="line">&#123;<span class="string">&#x27;年龄&#x27;</span>: [<span class="number">29</span>,<span class="number">7</span>,<span class="number">49</span>,<span class="number">12</span>,<span class="number">50</span>,<span class="number">34</span>,<span class="number">36</span>,<span class="number">75</span>,<span class="number">61</span>,<span class="number">20</span>,<span class="number">3</span>,<span class="number">11</span>],</span><br><span class="line">  <span class="string">&#x27;Y&#x27;</span>   : [<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]&#125;)</span><br><span class="line">bins = sc.woebin(df, y=<span class="string">&#x27;Y&#x27;</span>, method=<span class="string">&#x27;chimerge&#x27;</span>)  <span class="comment"># 卡方分箱</span></span><br><span class="line">sc.woebin_plot(bins)</span><br></pre></td></tr></table></figure><p>  ③最小熵值分箱</p><h6 id="聚类法："><a href="#聚类法：" class="headerlink" title="聚类法："></a>聚类法：</h6><pre><code>聚类将类似的值组织成群或“簇”。那些落在簇之外的值（孤立点），这些孤立点被视为噪声,同离群点的处理方式。k均值聚类法将观测值聚为k类，但在聚类过程中需要保证分箱的有序性：第一个分箱中所有观测值都要小于第二个分箱中的观测值，第二个分箱中所有观测值都要小于第三个分箱中的观测值。常见聚类算法有：① K-Means聚类② 均值漂移聚类③ 基于密度的聚类方法④ 基于高斯混合模型（GMM）的最大期望（EM）聚类⑤ 图团体检测聚类⑥ 凝聚层次聚类</code></pre><h6 id="回归法"><a href="#回归法" class="headerlink" title="回归法"></a>回归法</h6><pre><code> 回归法用一个函数拟合数据来光滑数据。即让数据适合一个函数来平滑数据，通过建立数学模型来预测下一个数值。通过，包括线性回归和非线性回归。线性回归涉及找出拟合两个属性的“最佳”直线，使得一个属性可以用来预测另一个。多元线性回归是线性回归的扩充，其中涉及的属性多余两个，并且数据拟合到一个多维曲面。</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
          <category> 重复值处理、噪音、无关值处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
            <tag> 数据清洗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学建模学习日记7.19-异常值处理</title>
      <link href="/2022/07/19/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B07-19-%E5%BC%82%E5%B8%B8%E5%80%BC%E5%A4%84%E7%90%86/"/>
      <url>/2022/07/19/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B07-19-%E5%BC%82%E5%B8%B8%E5%80%BC%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>建模比赛中涉及的数据常常会出现异常值，处理异常值有三种方式</p><p>1.直接删除。</p><p>2.当作缺失值,用缺失值的处理方法。</p><p>3.暂时保留,不直接在具有异常值的数据集上进行数据挖掘。</p><p>4.可用前后两个观测值的平均值修正该异常值.</p><p>对于异常值检测常常有下列几种处理方法：</p><h6 id="简单统计检测异常值"><a href="#简单统计检测异常值" class="headerlink" title="简单统计检测异常值"></a>简单统计检测异常值</h6><p>①直接观察整体数据，(统计数据应当为连续性)。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandas.describe()</span><br></pre></td></tr></table></figure><p>②简单使用散点图，从图中观察特征。</p><h6 id="3σ-原则检测异常值"><a href="#3σ-原则检测异常值" class="headerlink" title="3σ 原则检测异常值"></a>3σ 原则检测异常值</h6><p>当<strong>数据分布服从正态分布或者近似正态分布</strong>时，去除3σ 原则外的数据。</p><h6 id="箱型图检测（较为常用）"><a href="#箱型图检测（较为常用）" class="headerlink" title="箱型图检测（较为常用）"></a>箱型图检测（较为常用）</h6><p>先找出一组数据的上边缘、下边缘、中位数和两个四分位数；然后， 连接两个四分位数画出箱体；再将上边缘和下边缘与箱体相连接，中位数在箱体中间。</p><p>异常值被定义为小于Q<del>1</del>－1.5IQR或大于Q<del>3</del>+1.5IQR的值。</p><p>下四分位数（Q<del>1</del>）&#x3D;（数据个数+1）<em>0.25</em></p><p><em>上四分位数（Q3）&#x3D;（数据个数+1）</em>0.75</p><p>盒子长度IQR &#x3D; Q<del>3</del>-Q<del>1</del></p><p>最小观测值（下边缘）&#x3D;Q<del>1</del> - 1.5IQR</p><p>最大观测值（上边缘）&#x3D;Q<del>3</del>+ 1.5IQR</p><p>不在最小最大观测值范围内的视为异常值</p><p>箱型图法对于<strong>非正态分布数据</strong>中判断异常值，其有效性是有限的。</p><p>箱形图的绘制依靠实际数据，<strong>不需要事先假定数据服从特定的分布形式</strong>，没有对数据作任何限制性要求，它只是真实直观地表现数据形状的本来面貌。</p><h6 id="基于机器学习检测异常值"><a href="#基于机器学习检测异常值" class="headerlink" title="基于机器学习检测异常值"></a>基于机器学习检测异常值</h6><p>考虑到数据建模在数据预处理方面占比例较小，很少数据机器学习进行异常处理，故对基于机器学习检测异常值的内容不做深入介绍。常见方法有：</p><ol><li><strong>基于模型检测</strong></li><li><strong>基于近邻度的离群点检测</strong></li><li><strong>基于密度的离群点检测</strong></li><li><strong>基于聚类的方法来做异常点检测</strong></li><li><strong>专门的离群点检测</strong></li></ol><hr><p><img src="http://picforblog.oss-cn-hangzhou.aliyuncs.com/img/%E5%BC%82%E5%B8%B8%E5%80%BC%E6%A3%80%E6%B5%8B.png" alt="基于机器学习的异常值检测"></p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
          <category> 异常值处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
            <tag> 数据清洗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学建模学习日记7.19-缺失值处理</title>
      <link href="/2022/07/19/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B07-19-%E7%BC%BA%E5%A4%B1%E5%80%BC%E5%A4%84%E7%90%86/"/>
      <url>/2022/07/19/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B07-19-%E7%BC%BA%E5%A4%B1%E5%80%BC%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>数学建模题提供的数据常常以csv格式出现，而excel打开后常常会发现缺失值，通常有一下几种处理方法：</p><ul><li><strong>方法一：缺失值过多，直接删除指标</strong></li></ul><p>如果发现某一项指标的缺失值过大，比例达到1&#x2F;3以上，可以考虑去除该项指标。</p><p>例如调查人口信息，倘如发现“年龄”这一项缺失了40%，可以考虑<strong>直接删除该项指标</strong>。</p><p>需要具体问题具体分析。</p><p><strong>适用赛题</strong>：变量缺失<strong>过多</strong>的数据。</p><ul><li><strong>方法二：利用均值、众数等统计数据补充</strong>。</li></ul><p>①<strong>定量数据</strong>，例如关于一群人的身高、年龄等数据，那么用整体的均值放到缺失数据的位置。</p><p>②<strong>定性数据</strong>，例如关于一群人的性别、文化程度、某些事件调查的满意度，用众数弥补缺失值。</p><p><strong>适用赛题</strong>：数据量大、且<strong>对个体精度要求不大</strong>的数据。</p><ul><li><strong>方法三：Newton插值法</strong></li></ul><p>根据<strong>牛顿插值公式</strong>，构造<strong>近似函数</strong>，用近似函数的值来补上缺失值。</p><p>Newton插值法缺点在于<strong>区间边缘处</strong>的不稳定震荡，即<strong>龙格现象</strong>。即插值次数高的时候，区间内函数看起来挺正常，但在区间边缘处却变得忽上忽下。</p><p><strong>适用赛题</strong>：热力学温度、地形测量、定位等<strong>只追求函数值精准而不关心变化</strong>的数据，<strong>不适合对导数有要求的题目。</strong></p><p>代码如下：输入一组x和y的值，可以得到牛顿插值函数。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">p</span>= <span class="title">Newton_fun</span><span class="params">(x,xi,yi)</span></span></span><br><span class="line">n=<span class="built_in">length</span>(xi);</span><br><span class="line">f=<span class="built_in">zeros</span>(n,n);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 对差商表第一列赋值</span></span><br><span class="line"><span class="keyword">for</span> k=<span class="number">1</span>:n      </span><br><span class="line">    f(k)=yi(k);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">% 求差商表</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:n  <span class="comment">% 差商表从0阶开始；但是矩阵是从1维开始储存！</span></span><br><span class="line">    <span class="keyword">for</span> k=<span class="built_in">i</span>:n</span><br><span class="line">        f(k,<span class="built_in">i</span>)=(f(k,<span class="built_in">i</span><span class="number">-1</span>)-f(k<span class="number">-1</span>,<span class="built_in">i</span><span class="number">-1</span>))/(xi(k)-xi(k+<span class="number">1</span>-<span class="built_in">i</span>));  </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&#x27;差商表如下：&#x27;</span>);</span><br><span class="line"><span class="built_in">disp</span>(f);</span><br><span class="line"></span><br><span class="line"><span class="comment">%求插值多项式</span></span><br><span class="line">p=<span class="number">0</span>;          </span><br><span class="line"><span class="keyword">for</span> k=<span class="number">2</span>:n</span><br><span class="line">    t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:k<span class="number">-1</span></span><br><span class="line">        t=t*(x-xi(<span class="built_in">j</span>));</span><br><span class="line">        <span class="built_in">disp</span>(t)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    p=f(k,k)*t+p;</span><br><span class="line">    <span class="built_in">disp</span>(p)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">p=f(<span class="number">1</span>,<span class="number">1</span>)+p;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">xi=[<span class="number">11</span> <span class="number">12</span> <span class="number">13</span>];</span><br><span class="line">yi=[<span class="number">2.3979</span> <span class="number">2.4849</span> <span class="number">2.5649</span>];</span><br><span class="line">x=sym(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">p= Newton_fun(x,xi,yi)</span><br></pre></td></tr></table></figure><p>输出结果为</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p =</span><br><span class="line">(<span class="number">87</span>*x)/<span class="number">1000</span> - (<span class="number">7</span>*(x - <span class="number">11</span>)*(x - <span class="number">12</span>))/<span class="number">2000</span> + <span class="number">14409</span>/<span class="number">10000</span></span><br></pre></td></tr></table></figure><ul><li><strong>方法四：样条插值法</strong></li></ul><p>用分段光滑的曲线去插值，<strong>光滑</strong>要求曲线连续，并且有<strong>连续的导数</strong>。</p><p><strong>二次</strong>插值保证了<strong>函数和导数连续</strong>。</p><p><strong>三次</strong>插值就能保证<strong>函数、导数、二阶导数都</strong>连续。</p><p>以此类推。</p><p><strong>适用赛题</strong>：零件加工，水库水流量，图像“基线漂移”，机器人轨迹等精度要求高、不能有突变的数据。</p><p>代码如下：输入一组x和y的值，可以得到三次样条插值函数。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[D,h,A,g,M]</span>=<span class="title">threesimple</span><span class="params">(X,Y)</span></span></span><br><span class="line"><span class="comment">%        自然边界条件的三次样条函数(第二种边界条件)</span></span><br><span class="line"><span class="comment">%        此函数为M值求值函数</span></span><br><span class="line"><span class="comment">%        D,h,A,g,M输出量分别为系数矩阵D，插值宽度h，差商表A，g值,M值 </span></span><br><span class="line">         n=<span class="built_in">length</span>(X); </span><br><span class="line">         A=<span class="built_in">zeros</span>(n,n);A(:,<span class="number">1</span>)=Y&#x27;;D=<span class="built_in">zeros</span>(n<span class="number">-2</span>,n<span class="number">-2</span>);g=<span class="built_in">zeros</span>(n<span class="number">-2</span>,<span class="number">1</span>);</span><br><span class="line">         <span class="keyword">for</span>  <span class="built_in">j</span>=<span class="number">2</span>:n</span><br><span class="line">            <span class="keyword">for</span> <span class="built_in">i</span>=<span class="built_in">j</span>:n</span><br><span class="line">                A(<span class="built_in">i</span>,<span class="built_in">j</span>)=(A(<span class="built_in">i</span>,<span class="built_in">j</span><span class="number">-1</span>)- A(<span class="built_in">i</span><span class="number">-1</span>,<span class="built_in">j</span><span class="number">-1</span>))/(X(<span class="built_in">i</span>)-X(<span class="built_in">i</span>-<span class="built_in">j</span>+<span class="number">1</span>));</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">end</span></span><br><span class="line">         </span><br><span class="line">         <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n<span class="number">-1</span></span><br><span class="line">             h(<span class="built_in">i</span>)=X(<span class="built_in">i</span>+<span class="number">1</span>)-X(<span class="built_in">i</span>);</span><br><span class="line">         <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n<span class="number">-2</span></span><br><span class="line">             D(<span class="built_in">i</span>,<span class="built_in">i</span>)=<span class="number">2</span>;</span><br><span class="line">             g(<span class="built_in">i</span>,<span class="number">1</span>)=(<span class="number">6</span>/(h(<span class="built_in">i</span>+<span class="number">1</span>)+h(<span class="built_in">i</span>)))*(A(<span class="built_in">i</span>+<span class="number">2</span>,<span class="number">2</span>)-A(<span class="built_in">i</span>+<span class="number">1</span>,<span class="number">2</span>));</span><br><span class="line">         <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">2</span>:n<span class="number">-2</span></span><br><span class="line">             u(<span class="built_in">i</span>)=h(<span class="built_in">i</span>)/(h(<span class="built_in">i</span>)+h(<span class="built_in">i</span>+<span class="number">1</span>));</span><br><span class="line">             n(<span class="built_in">i</span><span class="number">-1</span>)=h(<span class="built_in">i</span>)/(h(<span class="built_in">i</span><span class="number">-1</span>)+h(<span class="built_in">i</span>));</span><br><span class="line">             D(<span class="built_in">i</span><span class="number">-1</span>,<span class="built_in">i</span>)=n(<span class="built_in">i</span><span class="number">-1</span>);</span><br><span class="line">             D(<span class="built_in">i</span>,<span class="built_in">i</span><span class="number">-1</span>)=u(<span class="built_in">i</span>);             </span><br><span class="line">         <span class="keyword">end</span></span><br><span class="line">         M=D\g;</span><br><span class="line">         M=[<span class="number">0</span>;M;<span class="number">0</span>];         </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">s</span>=<span class="title">threesimple1</span><span class="params">(X,Y,x)</span></span></span><br><span class="line"><span class="comment">%        自然边界条件函数 </span></span><br><span class="line"><span class="comment">%        s函数表示三次样条插值函数插值点对应的函数值</span></span><br><span class="line"><span class="comment">%        根据三次样条参数函数求出的D,h,A,g,M</span></span><br><span class="line"><span class="comment">%        x表示求解插值点函数点，X为已知插值点        </span></span><br><span class="line">         [D,h,A,g,M]=threesimple(X,Y)</span><br><span class="line">         n=<span class="built_in">length</span>(X); m=<span class="built_in">length</span>(x);    </span><br><span class="line">         <span class="keyword">for</span> t=<span class="number">1</span>:m</span><br><span class="line">            <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:n<span class="number">-1</span></span><br><span class="line">               <span class="keyword">if</span> (x(t)&lt;=X(<span class="built_in">i</span>+<span class="number">1</span>))&amp;&amp;(x(t)&gt;=X(<span class="built_in">i</span>))</span><br><span class="line">                  p1=M(<span class="built_in">i</span>,<span class="number">1</span>)*(X(<span class="built_in">i</span>+<span class="number">1</span>)-x(t))^<span class="number">3</span>/(<span class="number">6</span>*h(<span class="built_in">i</span>));</span><br><span class="line">                  p2=M(<span class="built_in">i</span>+<span class="number">1</span>,<span class="number">1</span>)*(x(t)-X(<span class="built_in">i</span>))^<span class="number">3</span>/(<span class="number">6</span>*h(<span class="built_in">i</span>));</span><br><span class="line">                  p3=(A(<span class="built_in">i</span>,<span class="number">1</span>)-M(<span class="built_in">i</span>,<span class="number">1</span>)/<span class="number">6</span>*(h(<span class="built_in">i</span>))^<span class="number">2</span>)*(X(<span class="built_in">i</span>+<span class="number">1</span>)-x(t))/h(<span class="built_in">i</span>);</span><br><span class="line">                  p4=(A(<span class="built_in">i</span>+<span class="number">1</span>,<span class="number">1</span>)-M(<span class="built_in">i</span>+<span class="number">1</span>,<span class="number">1</span>)/<span class="number">6</span>*(h(<span class="built_in">i</span>))^<span class="number">2</span>)*(x(t)-X(<span class="built_in">i</span>))/h(<span class="built_in">i</span>);</span><br><span class="line">                  s(t)=p1+p2+p3+p4; </span><br><span class="line">                  <span class="keyword">break</span>;</span><br><span class="line">               <span class="keyword">else</span></span><br><span class="line">                   s(t)=<span class="number">0</span>; </span><br><span class="line">               <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>输入数据如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">0.2</span>:<span class="number">0.2</span>:<span class="number">1</span>;</span><br><span class="line">y=[<span class="number">0.98</span> <span class="number">0.92</span> <span class="number">0.81</span> <span class="number">0.64</span> <span class="number">0.38</span>];</span><br><span class="line">x0=[<span class="number">0.2</span> <span class="number">0.28</span> <span class="number">1.0</span> <span class="number">1.08</span>];</span><br><span class="line">s=threesimple1(x,y,x0)</span><br></pre></td></tr></table></figure><p>得到输出如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">s=threesimple1(x,y,x0)</span><br><span class="line"></span><br><span class="line">D =</span><br><span class="line"></span><br><span class="line">    <span class="number">2.0000</span>    <span class="number">0.5000</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.5000</span>    <span class="number">2.0000</span>    <span class="number">0.5000</span></span><br><span class="line">         <span class="number">0</span>    <span class="number">0.5000</span>    <span class="number">2.0000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">h =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.2000</span>    <span class="number">0.2000</span>    <span class="number">0.2000</span>    <span class="number">0.2000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.9800</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.9200</span>   <span class="number">-0.3000</span>         <span class="number">0</span>         <span class="number">0</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.8100</span>   <span class="number">-0.5500</span>   <span class="number">-0.6250</span>         <span class="number">0</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.6400</span>   <span class="number">-0.8500</span>   <span class="number">-0.7500</span>   <span class="number">-0.2083</span>         <span class="number">0</span></span><br><span class="line">    <span class="number">0.3800</span>   <span class="number">-1.3000</span>   <span class="number">-1.1250</span>   <span class="number">-0.6250</span>   <span class="number">-0.5208</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">g =</span><br><span class="line"></span><br><span class="line">   <span class="number">-3.7500</span></span><br><span class="line">   <span class="number">-4.5000</span></span><br><span class="line">   <span class="number">-6.7500</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">M =</span><br><span class="line"></span><br><span class="line">         <span class="number">0</span></span><br><span class="line">   <span class="number">-1.6071</span></span><br><span class="line">   <span class="number">-1.0714</span></span><br><span class="line">   <span class="number">-3.1071</span></span><br><span class="line">         <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.9800</span>    <span class="number">0.9596</span>    <span class="number">0.3800</span>         <span class="number">0</span></span><br></pre></td></tr></table></figure><p><strong>方法五：建模预测法</strong></p><p>将缺失的属性作为预测目标来预测，将数据集按照是否含有特定属性的缺失值分为两类，利用现有的机器学习算法对待预测数据集的缺失值进行预测。</p><p>该方法的根本的缺陷是如果其他属性和缺失属性无关，则预测的结果毫无意义；但是若预测结果相当准确，则说明这个缺失属性是没必要纳入数据集中的；一般的情况是介于两者之间。<br><strong>适用赛题</strong>：聚类算法等。</p><p><strong>方法六：高维映射法</strong></p><p>将属性映射到高维空间，采用独热码编码（one-hot）技术。将包含K个离散取值范围的属性值扩展为K+1个属性值，若该属性值缺失，则扩展后的第K+1个属性值置为1。</p><p>这种做法是最精确的做法，保留了所有的信息，也未添加任何额外信息，若预处理时把所有的变量都这样处理，会大大增加数据的维度。<br>该方法好处是完整保留了原始数据的全部信息、不用考虑缺失值；缺点是计算量大大提升，且只有在样本量非常大的时候效果才好。<br><strong>适用赛题</strong>：样本量较大的数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> preprocessing  </span><br><span class="line">   </span><br><span class="line">enc = preprocessing.OneHotEncoder()  </span><br><span class="line">enc.fit([[<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>],[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span>]])  <span class="comment">#这里一共有4个数据，3种特征</span></span><br><span class="line">   </span><br><span class="line">array = enc.transform([[<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>]]).toarray()  <span class="comment">#这里使用一个新的数据来测试</span></span><br><span class="line">   </span><br><span class="line"><span class="built_in">print</span> (array）   <span class="comment"># [[ 1  0  0  1  0  0  0  0  1]]结果为 1 0 0 1 0 0 0 0 1</span></span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[ <span class="number">1</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">1</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span>  <span class="number">1</span>]]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
          <category> 缺失值处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
            <tag> 数据清洗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学建模学习日记7.18-知识点总结</title>
      <link href="/2022/07/19/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
      <url>/2022/07/19/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/</url>
      
        <content type="html"><![CDATA[<p>该系列内容为我参加学校数学建模夏令营选拔考试所作的准备，意在总结学习内容，记录学习心得。</p><p><img src="http://picforblog.oss-cn-hangzhou.aliyuncs.com/img/%E7%9F%A5%E8%AF%86%E6%A6%82%E8%A7%88.png" alt="知识点总结"></p><p>数学建模题目类型可以分为评价类、预测类、优化类三类问题。而很多题目需要进行数据预处理。</p><h6 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h6><pre><code> 数据清洗      ①缺失值处理      ②异常值处理      ③重复值处理  数据变换     ①简单函数变换          ②标准化处理          ③分类变量处理          ④连续变量离散化</code></pre><h6 id="评价类问题"><a href="#评价类问题" class="headerlink" title="评价类问题"></a>评价类问题</h6><pre><code>主观评价    ①层次分析法        ②模糊综合评价法        ③灰色关联分析评价法    客观评价    ①主成分分析法        ②因子分析法        ③Topsis分析法        ④神经网络分析法</code></pre><h6 id="预测类问题"><a href="#预测类问题" class="headerlink" title="预测类问题"></a>预测类问题</h6><pre><code>中短期预测    ①灰色预测法        ②回归分析法        ③时间序列预测模型        ④微分方程预测法    长期预测    ①神经网络预测        ②Logistic预测模型        ③微分方程预测模型</code></pre><h6 id="优化类问题"><a href="#优化类问题" class="headerlink" title="优化类问题"></a>优化类问题</h6><pre><code>根据目标及约束条件类型分类    ①线性规划        ②非线性规划        ③二次规划    控制变量类型分类    ①整数规划        ②混合整数规划        ③0-1规划    其他分类方法    ①单目标与多目标规划模型        ②动态规划与静态规划        ③随机规划与确定规划    智能优化类型    ①粒子群算法        ②遗传算法        ③模拟退火算法</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
          <category> 概览 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php弱类型</title>
      <link href="/2022/07/18/php%E5%BC%B1%E7%B1%BB%E5%9E%8B/"/>
      <url>/2022/07/18/php%E5%BC%B1%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<p>PHP语言是一种弱语言类型：<br>&#x3D;&#x3D; 松散比较 只比较值<br>&#x3D;&#x3D;&#x3D; 严格比较 同时比较值和类型</p><p><img src="http://picforblog.oss-cn-hangzhou.aliyuncs.com/img/img1.png" alt="松散比较"></p><p>值得注意的是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">true</span>==<span class="number">1</span>         <span class="literal">true</span></span><br><span class="line"><span class="literal">true</span>==-<span class="number">1</span>        <span class="literal">true</span></span><br><span class="line"><span class="literal">true</span>==<span class="string">&#x27;php&#x27;</span>     <span class="literal">true</span></span><br><span class="line"><span class="number">1</span>==<span class="string">&#x27;php&#x27;</span>        <span class="literal">false</span></span><br><span class="line">-<span class="number">1</span>==<span class="string">&#x27;php&#x27;</span>       <span class="literal">false</span></span><br></pre></td></tr></table></figure><p><img src="http://picforblog.oss-cn-hangzhou.aliyuncs.com/img/img2.png" alt="严格比较"></p><p>通常情况下，字符串是注意的重点，在松散相等比较&#x3D;&#x3D;下，数字和字符串比较时，字符串会被转化成数字比较。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//判断和运算均同理</span></span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="string">&#x27;admin&#x27;</span>==<span class="number">0</span>);<span class="comment">//true</span></span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="string">&#x27;12admin&#x27;</span>==<span class="number">12</span>);<span class="comment">//true</span></span><br><span class="line"><span class="comment">//下面这种情况，&#x27;e&#x27;,&#x27;E&#x27;类型的字符串会被当做数字比较。</span></span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="string">&#x27;0e123456&#x27;</span>==<span class="string">&#x27;0e4456789&#x27;</span>);<span class="comment">//true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>另外，字符串被当作数字时，若该字符串中存在 ,   e   E之一则均视为浮点类型。</p><h4 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h4><h5 id="1-MD5绕过"><a href="#1-MD5绕过" class="headerlink" title="1.MD5绕过"></a>1.MD5绕过</h5><p>MD5是一种散列函数,是哈希算法的一种,可以将任意长度的输入,通过散列算法变换成128位的散列值。</p><p>常见的md5破解方法有：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.0e绕过</span><br><span class="line">2.数组绕过</span><br><span class="line">3.MD5碰撞</span><br><span class="line">4.MD5SQL注入</span><br></pre></td></tr></table></figure><h6 id="a-0e绕过"><a href="#a-0e绕过" class="headerlink" title="a.0e绕过"></a>a.0e绕过</h6><p>其中0e绕过就是利用了php&#x3D;&#x3D;的松散比较。以0e开头的md5加密字符串在参与比较时,会被当做科学计数法,结果转换为0。由于0e开头的字符串会转换为0,所以真正比较的过程会变为0 &#x3D;&#x3D; 0。<br>返回结果为true,也就是说0e开头的md5值进行弱类型比较时,结果相等。</p><p>常用的MD5加密后以0e开头的有:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line">240610708</span><br><span class="line">0e462097431906509019562988736854</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1184209335a</span><br><span class="line">0e072485820392773389523109082030</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s532378020a</span><br><span class="line">0e220463095855511507588041205815</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br></pre></td></tr></table></figure><h6 id="b-数组绕过"><a href="#b-数组绕过" class="headerlink" title="b.数组绕过"></a>b.数组绕过</h6><p><strong>数组绕过可以绕过php&#x3D;&#x3D;&#x3D;严密比较。</strong></p><p>md5不能加密数组,传入数组会报错,但会继续执行并且返回结果为null。</p><p> 比如将两个数组的md5值进行比较，</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">md5</span><span class="params">(a[]=<span class="number">1</span>)</span> === <span class="title">md5</span><span class="params">(b[]=<span class="number">1</span>)</span></span></span><br></pre></td></tr></table></figure><p>由于md5函数无法处理数组,会返回null,所以md5加密后的结果是下面这样。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">null</span> === <span class="literal">null</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> web </category>
          
          <category> 开发语言 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>diary Jul. 14th</title>
      <link href="/2022/03/06/%E7%BB%99%E6%A2%A6%E6%A2%A6%E5%AD%90%E7%9A%84%E6%82%84%E6%82%84%E8%AF%9D/"/>
      <url>/2022/03/06/%E7%BB%99%E6%A2%A6%E6%A2%A6%E5%AD%90%E7%9A%84%E6%82%84%E6%82%84%E8%AF%9D/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试。" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="dc2b933779957bc75db4fd10c5f346a1da4062c8a33179a2d6f6025d871b546c">0883f31d0e23ffb2c479b43b55a652f3ef520ead63180872492a01e0b05959b374c66b08e9ee9694eccd7e1839f3133450972ea465279a0b75128547c818bf45dd26a9a50a536c4423a96dead59206955084014b6490f43c6f4ab4dfe7dd67c9ade3029413472f57c239e67396d491d4caaf8713107637abfca987f1e2ea7ebfad96af639dc44fad0938539bd4bf0d450f5397fb6302d55ba3fbb698003b20f576f1c7b15af21b5700aefa107a07c1e1f8ce8f68d5d0cece1389fccb2df2ffa7b32762cce08f5aed68a83bc4af009bc362049819fb50a034cdcb6b22115c3ba0de17bb0b1bd9dd74760b8ab214cc08b86d8376ec56bee7670a04f03fe1fa3f5a01132bf85ef2f4b5269dfe02a3a268fd30267eebfdb6ac68c388d368db95885507e9f401460168b85199aba9bb5e8d417982055dab4b9349070ca10afba9bfa2f60e50c215493ae8715aa850591a6bb0c2cc0ef5b35b4d38c21338d5b30e7639a5b7a3ddfe6b7d15083e06933ced920063a08703c1f7b1f8962c0c3b485fff8cf3d7ef8c4da17f428dda190235fca98b650fa3b283b9e06068c9a648d155294b3cd25e0ae12bc5d3657d69cbe5118b50ff94f08d580137d945bbfd1e8d1c3a21f458b5b8b1bb3191bec1ce9db36298f873346c710c96cf2c567430fca3508dd178fc9ae6cb0cb532c43ce524993c3fb328424eb0360680470ee4017462e208ebb7e2c709af77df140bc73fe952f5646bdfbd6c11b6295791ae494e741fe1879f997ff2064c8c9d2856638cc343d01c41b3bb6327cb6ebc8bc8ffeb8917def14a65fe6ca0d4866a0e6f0012eca875a4dbbab8e63895b7727f0489567f73c67a1c21717b5a5a253c9b0b9cbadc18559c650cf9e08d6afa70783472583de3a7a3faaa73066910a61e3084e76b26bb9d9f43761be088b0ecc8b904ebe36ac4f8184d15008623554608529e190f1879db7dc7706d9d29fac88e771b97b0529fa1df06803f6c2116548474499be98d2f39a48ef7e06807c098522b46d6c66063fafe65710fdd49705bd1175e69cb88d73634873122aff55b2bc19b927f08ab43fd30f13774eee0e243f63e289b89a76a943b88240c5145b199a38b2291de5095db17530b3fb79fc97b4c269ed4fdfee86c426dcf82fd7485d65f3a3a9d0ad9badd23b3a6a17b28a78154fcf53ab97b8ea2419da2ade793ea4dd8d817c881353d4cbec11061b9c0c6afd807ae1cfd9debd9f18d647154d1410e75b684c9a3b5a8d6cd5654ba66a102e91e72e8c45356b94069a585d8e40e84220770bcd45f292d6de0fb7fa4a4808bb7946d5056e84c6362c7084707c495c896ea37d957ac452b1d75f911074c4fc9acc9600305815aaad4b0b4937d43f070ca5e35fa72dce9dc7eb9ebc46f19e8e22a89b4b4e197fa1129d2d637a107dbdc8c2f7732da8b5a617318acc5524cd0eca1b01e44622c2449c25f9599ef77220e857a3b471fef1d908e968adfcf9cd5d9a2ff4f1320769b4c8c83d594fa41ad2410cd79f62abb0d17ec0b87d7ac112a3852b3a72d906f3663b3af881c8854270d307c744b9f769d62fe7c4fb0688f34ec64179c85262bcec438739865e3139b4e481c9951dd6f4581cda651297cf80e3f250147dae618ba38fdd39b62a1c61e8aa88f0801b1638849743e14867493a213e01b57714ef349c943f08cbee61cabeced690c332eac827e3240a1208d6d086729c67cbac351a9a6a93251061e4caa81dda73187ae55e48a3a7188183f8a4844e878ad4af89e1ba507bf54a8cef3222b83b03ddcdcb9a46b34de579aa307560e30197b2a41d7392194afd2fda9b951dacdd15d0abeee17a4a610fc00dadc62c86538a568c9c1d001b87ea1076bf7b91c5a9bdaa588213e68a9a707f8a15c6d4097023306048b9c15b14d8e6f63522b7298084729235fafbe2839bfb0b80c9c539c152ebba23cb33a9396b1e4ac3daee02a7b98951dcabcf8418cf06b5fed06aa047a26d16b395bdfc3bdf0c0fa61f4c359088b28c0050213f8479bd2a350905d76c9d55f1fa96284a9898165569cdd50c9ee8561420f6253276195ba781ad8ea3028b76170f47bbb9b7a67d975b326e5857354469ec710bee0405192a8bdf30d473f3d517f1cdef369b99866bc073ab0cacfa7fcca49e2755e960e4cd9619a7d71d1269f091407d2595ab4147ad60bcd38c015c49ba226e302fc7347cfae605e272d2e3ad26f6e9017eba27d30122ccb2869712206d1122aa78116b0e8f40d2b5e7a09f4faf2f88a9b1b537edb52df0fe2dea5d1228a6c7dbef3542dc88909dfeca6e1d99dec2375dc898d8a1331e613cf95ceb2bcc958c49059289ec0551c4f8d4c6c90afcd8e52773c84</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请您输入密码解密，来查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> love </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
